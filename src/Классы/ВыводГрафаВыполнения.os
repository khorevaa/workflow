
Перем УровеньГрафа;


// Процедура Информация(Знач Сообщение,
// 	Знач Параметр1 = Неопределено, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
// 	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
// 	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
// 	Вывести(Сообщение, УровниЛога.Информация, Параметр1,
// 	Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
// КонецПроцедуры

Процедура ВывестиПодчиненныйРаздел(Знач Сообщение, Знач УровеньПодчинения = 0, Знач Параметр1 = Неопределено, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)
	
	Отступ = "| ";
	СтрокаОтступа = "";
	Для ИИ = 1 По УровеньГрафа Цикл
		СтрокаОтступа = СтрокаОтступа + Отступ;
	КонецЦикла;
	Вывести("|")


КонецПроцедуры


Процедура Вывести(Знач Сообщение, Знач Параметр1 = Неопределено, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	
	Если ЕстьЗаполненныеПараметры(Параметр1, Параметр2, Параметр3,
		Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9) Тогда
		
		Сообщение = СтрШаблон(Сообщение, Параметр1,
		Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	КонецЕсли;

	// Отступ = Символы.Таб;
	// СтрокаОтступа = "";
	// Для ИИ = 1 По УровеньГрафа Цикл
	// 	СтрокаОтступа = СтрокаОтступа + Отступ;
	// КонецЦикла;

	Сообщить(Сообщение);

КонецПроцедуры


Функция ЕстьЗаполненныеПараметры(Знач Параметр1 = Неопределено, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)
	
	Если НЕ Параметр1 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр2 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр3 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр4 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр5 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр6 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр7 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр8 = Неопределено Тогда
		Возврат Истина;
	ИначеЕсли НЕ Параметр9 = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Процедура Вывести()

// 	// Если ТипЗнч(ЗначенияПараметров) = Тип("Массив") Тогда

// 	// 	Для ИИ = 0 По ЗначенияПараметров.ВГраница() Цикл
// 	// 		ПоказатьНастройкиВРежимеОтладки(ЗначенияПараметров[ИИ], СтрШаблон("%1.%2", Родитель, ИИ));
// 	// 	КонецЦикла;

// 	// ИначеЕсли ТипЗнч(ЗначенияПараметров) = Тип("Структура")
// 	// 	ИЛИ ТипЗнч(ЗначенияПараметров) = Тип("Соответствие") Тогда

// 	// 	Если ЗначенияПараметров.Количество() = 0 Тогда
// 	// 		Лог.Отладка("	Коллекция параметров пуста!");
// 	// 	КонецЕсли;

// 	// 	Для каждого Элемент Из ЗначенияПараметров Цикл

// 	// 		Если Не ПустаяСтрока(Родитель) Тогда
// 	// 			ПредставлениеКлюча  = СтрШаблон("%1.%2", Родитель, Элемент.Ключ);
// 	// 		Иначе
// 	// 			ПредставлениеКлюча = Элемент.Ключ;
// 	// 		КонецЕсли;

// 	// 		Если ТипЗнч(Элемент.Значение) = Тип("КонструкторПараметров") Тогда

// 	// 			ПоказатьНастройкиВРежимеОтладки(Элемент.Значение.ВСтруктуру(), ПредставлениеКлюча);

// 	// 		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Структура") 
// 	// 			ИЛИ ТипЗнч(Элемент.Значение) = Тип("Соответствие")  Тогда

// 	// 			ПоказатьНастройкиВРежимеОтладки(Элемент.Значение, ПредставлениеКлюча);	

// 	// 		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда

// 	// 			Лог.Отладка("	параметр <%1> = Массив.<%2>", ПредставлениеКлюча, Элемент.Значение.Количество());

// 	// 			ПоказатьНастройкиВРежимеОтладки(Элемент.Значение, ПредставлениеКлюча);	

// 	// 		Иначе
// 	// 			Лог.Отладка("	параметр <%1> = <%2>", ПредставлениеКлюча, Элемент.Значение);

// 	// 		КонецЕсли;

// 	// 	КонецЦикла;

// 	// ИначеЕсли ТипЗнч(ЗначенияПараметров) = Тип("КонструкторПараметров") Тогда

// 	// 	ПоказатьНастройкиВРежимеОтладки(ЗначенияПараметров.ВСтруктуру(), Родитель);


// 	// Иначе

// 	// 	Лог.Отладка("	параметр <%1> = <%2>", Родитель, ЗначенияПараметров);

// 	// КонецЕсли;

// КонецПроцедуры

Процедура ПриСозданииОбъекта(ЗначениеУровеньГрафа = Неопределено)
	
	УровеньГрафа = ЗначениеУровеньГрафа;

	Если УровеньГрафа = Неопределено Тогда
		УровеньГрафа = 0;
	КонецЕсли;
	
КонецПроцедуры