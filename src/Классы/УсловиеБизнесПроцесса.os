// Условие это вложенный бизнес процесс
#Использовать logos

Перем Лог;

перем КлючКонтекста;   // Строка  
Перем Наименование;    // Строка
Перем Идентификатор;   // УникальныйИдентификатор
Перем Контекст;        // Объект <КонтекстВыполнения>
Перем БизнесПроцесс;   // Объект <БизнесПроцесс>
Перем БизнесПроцессПоУмолчанию; // Объект <БизнесПроцесс>
Перем ИндексЗадачУсловия; // Соответствие

#Область Программный_интерфейс

// Возвращает наименование условия бизнес процесса
//
//  Возвращаемое значение:
//   Строка - наименование условия бизнес процесса
//
Функция Наименование() Экспорт
	Возврат Наименование;
КонецФункции

// Возвращает UID условия бизнес процесса
//
//  Возвращаемое значение:
//   УникальныйИдентификатор - UID условия бизнес процесса
//
Функция Идентификатор() Экспорт
	Возврат Идентификатор;
КонецФункции

// Возвращает ключ контекста условия бизнес процесса
//
//  Возвращаемое значение:
//   Строка - наименование условия бизнес процесса
//
Функция КлючКонтекста() Экспорт
	Возврат КлючКонтекста;
КонецФункции

// Возвращает контекст выполнения условия бизнес процесса
//
//  Возвращаемое значение:
//   Объект - объект класса <КонтекстВыполнения>
//
Функция ПолучитьКонтекст() Экспорт
	
	Возврат Контекст;
	
КонецФункции

// Добавляет обработчик для значения ключа контекста
//
// Параметры:
//   ЗначениеУсловия - Произвольный - значения ключа контекста
//
//  Возвращаемое значение:
//   Объект - объект класса <БизнесПроцесс>
//
Функция ДляЗначения(Знач ЗначениеУсловия) Экспорт

	БизнесПроцессУсловия = Новый БизнесПроцесс(СтрШаблон("БП_Условия_%1_%2", КлючКонтекста, ЗначениеУсловия));

	ОбработчикиСобытий = БизнесПроцесс.ПолучитьОбработчикиСобытий();
	БизнесПроцессУсловия.УстановитьОбработчикиСобытий(ОбработчикиСобытий);
	ИндексЗадачУсловия.Вставить(ЗначениеУсловия, БизнесПроцессУсловия);

	Возврат БизнесПроцессУсловия;

КонецФункции

// Добавляет обработчик условия для по умолчанию
//
//  Возвращаемое значение:
//   Объект - объект класса <БизнесПроцесс>
//
Функция ПоУмолчанию() Экспорт
	
	БизнесПроцессПоУмолчанию = Новый БизнесПроцесс(СтрШаблон("БП_Условия_%1_%2", КлючКонтекста, "ПоУмолчанию"));
	ОбработчикиСобытий = БизнесПроцесс.ПолучитьОбработчикиСобытий();
	БизнесПроцессПоУмолчанию.УстановитьОбработчикиСобытий(ОбработчикиСобытий);
	Возврат БизнесПроцессПоУмолчанию;

КонецФункции

// Процедура выполняет условие
//
Процедура ВыполнитьУсловие() Экспорт
	
	Если Контекст = Неопределено Тогда
		Контекст = БизнесПроцесс.ПолучитьКонтекст();
	КонецЕсли;

	ЗначениеУсловия = Контекст.Получить(КлючКонтекста);
	БизнесПроцессЗначения = ИндексЗадачУсловия[ЗначениеУсловия];

	Если Не БизнесПроцессЗначения = Неопределено Тогда
		БизнесПроцессЗначения.Запустить();
	ИначеЕсли НЕ БизнесПроцессПоУмолчанию = Неопределено Тогда
		БизнесПроцессПоУмолчанию.Запустить();
	КонецЕсли;

КонецПроцедуры

// Возвращает бизнес процесс условия
//
//  Возвращаемое значение:
//   Объект - объект класса <БизнесПроцесс>
//
Функция БизнесПроцесс() Экспорт
	
	Возврат БизнесПроцесс;
	
КонецФункции

// Устанавливает бизнес процесс условия
//
// Параметры:
//   БизнесПроцессУсловия - Объект - объект класса <БизнесПроцесс>
//
Процедура УстановитьБизнесПроцесс(БизнесПроцессУсловия) Экспорт
	
	Если Не БизнесПроцессУсловия = Неопределено Тогда
		Лог.КритичнаяОшибка("Для данного условия <%1> (<%2>) уже задан бизнес процесс. Переопределение невозможно", Наименование, Идентификатор);
		Возврат;
	КонецЕсли;
	
	БизнесПроцесс = БизнесПроцессУсловия;
	ОбработчикиСобытий = БизнесПроцесс.ПолучитьОбработчикиСобытий();
	
	Если НЕ БизнесПроцессПоУмолчанию = Неопределено Тогда
		БизнесПроцессПоУмолчанию.УстановитьОбработчикиСобытий(ОбработчикиСобытий);
	КонецЕсли;
	
	Для каждого КлючЗначение Из ИндексЗадачУсловия Цикл
		КлючЗначение.Значение.УстановитьОбработчикиСобытий(ОбработчикиСобытий);	
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область Печать_графа

Процедура НапечататьГрафВыполнения(Уровень = 0) Экспорт
	// TODO: Заготовка вывода графа выполнения
КонецПроцедуры

#КонецОбласти

#Область Вспомогательные_процедуры_и_функции

Процедура ПриСозданииОбъекта(КлючУсловия, КонтекстВыполнения = Неопределено, БизнесПроцессУсловия = Неопределено)
	
	Наименование = КлючУсловия;
	Идентификатор = Новый УникальныйИдентификатор();
	КлючКонтекста = КлючУсловия;

	БизнесПроцесс = БизнесПроцессУсловия;
	Контекст = КонтекстВыполнения;

	ИндексЗадачУсловия = Новый Соответствие();

	Лог = Логирование.ПолучитьЛог("oscript.lib.workflow.condition");

КонецПроцедуры

#КонецОбласти