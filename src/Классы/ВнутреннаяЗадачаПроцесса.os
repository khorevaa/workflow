#Использовать reflector
#Использовать delegate

Перем НаименованиеЗадачи;

Перем ЗадачаУспешногоВыполнения;
Перем ЗадачаОшибкиВыполнения;

Перем ОбъектОбработчик; // Произвольный объект
Перем ИмяМетода; // Строка
Перем ПараметрыМетода; // МассивПараметров

Перем ВыполнитьВПопытке; // Булево

Перем Выполнена; // Булево, Если истина - выполнена без ошибки, ложь выполнена с ошибкой см. реквизит ОписаниеОшибкиВыполнения
Перем ОписаниеОшибкиВыполнения; // Строка

Перем РефлекторОбработчика; // Объект РефлекторОбъекта

Функция ПриУспешномВыполнении(ВходящийОбъектОбработчик, ВходящееИмяМетода, ВходящиеПараметрыМетода = Неопределено) Экспорт

	НаименованиеНовойЗадачи = СтрШаблон("%1_%2", НаименованиеЗадачи, "ПриУспешномВыполнении");

	ЗадачаУспешногоВыполнения = Новый ЗадачаПроцесса(НаименованиеНовойЗадачи,
													ВходящийОбъектОбработчик,
													ВходящееИмяМетода,
													ВходящиеПараметрыМетода)
													;

	Возврат ЭтотОбъект;

КонецФункции

Функция ЗадачаУспешногоВыполнения(ВходящаяЗадача) Экспорт

	// TODO: Сделать проверку на тип должна быть только ЗадачаПроцесса
	ЗадачаУспешногоВыполнения = ВходящаяЗадача;

	Возврат ЭтотОбъект;

КонецФункции

Функция ПриОшибке(ВходящийОбъектОбработчик, ВходящееИмяМетода) Экспорт

	НаименованиеНовойЗадачи = СтрШаблон("%1_%2", НаименованиеЗадачи, "ПриОшибке");

	ЗадачаОшибкиВыполнения = Новый ЗадачаПроцесса(НаименованиеНовойЗадачи, ВходящийОбъектОбработчик, ВходящееИмяМетода);
	
	ВыполнитьВПопытке = Истина;

	Возврат ЭтотОбъект;

КонецФункции

Функция ВПопытке() Экспорт

	ВыполнитьВПопытке = Истина;

	Возврат ЭтотОбъект;

КонецФункции

Функция ЗадачаПриОшибке(ВходящаяЗадача) Экспорт

	// TODO: Сделать проверку на тип должна быть только ЗадачаПроцесса
	ЗадачаОшибкиВыполнения = ВходящаяЗадача;

	Возврат ЭтотОбъект;

КонецФункции

Процедура ВыполнитьЗадачу(ОбязательныеПараметрыЗадачи = Неопределено) Экспорт

	Если ОбязательныеПараметрыЗадачи = Неопределено Тогда
		ОбязательныеПараметрыЗадачи = Новый Массив;
	КонецЕсли;

	ВыполнениеЗадачи(ОбязательныеПараметрыЗадачи);

	Если Выполнена Тогда
		ВыполнитьЗадачуУспешногоВыполнения();
	Иначе
		ВыполнитьЗадачуОшибкиВыполнения();
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнениеЗадачи(Знач ОбязательныеПараметры)

	Если ПустаяЗадача() Тогда
		Выполнена = Истина;
		Возврат;
	КонецЕсли;

	Если ВыполнитьВПопытке Тогда
		ВыполнитьЗадачуВПопытке(ОбязательныеПараметры);
	Иначе
		ВыполнитьЗадачуПоУмолчанию(ОбязательныеПараметры);
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьЗадачуВПопытке(Знач ОбязательныеПараметры)

	Попытка

		ВыполнитьЗадачуПоУмолчанию(ОбязательныеПараметры);
		Выполнена = Истина;

	Исключение

		ОписаниеОшибкиВыполнения = ИнформацияОбОшибке();

	КонецПопытки;

КонецПроцедуры

Процедура ВыполнитьЗадачуПоУмолчанию(Знач ОбязательныеПараметры)

	Делегат = Делегаты.Создать(ОбъектОбработчик, ИмяМетода);

	ИтоговыеПараметрыМетода = СформироватьПараметрыМетода(ОбязательныеПараметры);

	Если ИтоговыеПараметрыМетода.Количество() > 0  Тогда
		Делегат.Исполнить(ИтоговыеПараметрыМетода);

		// TODO: Проработать вопрос присвоения массива параметров назад
	Иначе
		Делегат.Исполнить();
	КонецЕсли;

КонецПроцедуры

Функция СформироватьПараметрыМетода(ОбязательныеПараметры)

	ИтоговыеПараметрыМетода = Новый Массив;
	
	ДополнитьМассивЭлементами(ИтоговыеПараметрыМетода, ОбязательныеПараметры);

	ДополнитьМассивЭлементами(ИтоговыеПараметрыМетода, ПараметрыМетода);

	Возврат ИтоговыеПараметрыМетода;

КонецФункции

Процедура ДополнитьМассивЭлементами(МассивПриемник, МассивИсточник)

	Если МассивИсточник.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для каждого ЭлементИсточника Из МассивИсточник Цикл
		МассивПриемник.Добавить(ЭлементИсточника);
	КонецЦикла;
	
КонецПроцедуры

Функция ПустаяЗадача()

	Возврат ОбъектОбработчик = Неопределено;

КонецФункции

Процедура ВыполнитьЗадачуОшибкиВыполнения()

	Если ЗадачаОшибкиВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗадачиОшибки = Новый Массив;
	ПараметрыЗадачиОшибки.Добавить(ОписаниеОшибкиВыполнения);
	ЗадачаОшибкиВыполнения.ВыполнитьЗадачу(ПараметрыЗадачиОшибки);
	
КонецПроцедуры

Процедура ВыполнитьЗадачуУспешногоВыполнения()

	Если ЗадачаУспешногоВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЗадачаУспешногоВыполнения.ВыполнитьЗадачу();
	
КонецПроцедуры

Процедура ПриСозданииОбъекта(ВхоядщееНаименование,
							ВходящийОбъектОбработчик,
							ВходящееИмяМетода, ВходящиеПараметрыМетода = Неопределено)

	НаименованиеЗадачи = ВхоядщееНаименование;
	ОбъектОбработчик = ВходящийОбъектОбработчик;
	ИмяМетода = ВходящееИмяМетода;
	ПараметрыМетода = ВходящиеПараметрыМетода;

	Выполнена = Ложь;
	ВыполнитьВПопытке = Ложь;
	ОписаниеОшибкиВыполнения = "";

	Если ОбъектОбработчик = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ПараметрыМетода = Неопределено Тогда
		ПараметрыМетода = Новый Массив;
	КонецЕсли;

	КоличествоПараметровМетода = ПараметрыМетода.Количество();

	РефлекторОбработчика = Новый РефлекторОбъекта(ОбъектОбработчик);
	МетодЗадачиЕсть = РефлекторОбработчика.ЕстьПроцедура(ИмяМетода, КоличествоПараметровМетода);

	Если Не МетодЗадачиЕсть Тогда
		ВызватьИсключение СтрШаблон("Не удалось создать задачу для объекта <%1> с методом <%2> (количество параметров <%3>)",
							ОбъектОбработчик, ИмяМетода, КоличествоПараметровМетода);
	КонецЕсли;

КонецПроцедуры