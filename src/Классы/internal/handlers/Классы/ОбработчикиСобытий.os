#Использовать delegate
#Использовать reflector
#Использовать "../../types"

Перем ИндексСобытий;
Перем ТаблицаОбработчиковСобытий;

Процедура Добавить(Знач ИмяСобытия, ОбъектОбработчик, Знач ИмяМетода) Экспорт
	
	ЕстьСобытие = ИндексСобытий.Свойство(ИмяСобытия);
	
	Если Не ЕстьСобытие Тогда
		ДобавитьСобытие(ИмяСобытия);
	КонецЕсли;

	ОписаниеОбработчикаСобытия = ОписаниеОбработчика(ИмяСобытия, ОбъектОбработчик, ИмяМетода);

	ДобавитьОбработчикСобытияВТаблицу(ОписаниеОбработчикаСобытия);

КонецПроцедуры

Процедура ДобавитьСобытие(Знач ИмяСобытия, Знач КоличествоПараметров = Неопределено) Экспорт
	
	ИндексСобытий.Вставить(ИмяСобытия, КоличествоПараметров);

КонецПроцедуры

Процедура ПроверитьОбработчикДляСобытия(Знач ИмяСобытия, ОбъектОбработчик, Знач ИмяМетода) Экспорт
	
	ОписаниеСобытия = ПолучитьОписаниеСобытия(ИмяСобытия);
	Если ОписаниеСобытия = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Попытка проверить обработчик для не инициализированного события <%1>", ИмяСобытия)
	КонецЕсли;

	Если ОписаниеСобытия.КоличествоПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РасширенныйРефлектор = Новый РефлекторОбъекта(ОбъектОбработчик);
	РасширенныйРефлектор.ОбязательнаяПроцедура(ИмяМетода, ОписаниеСобытия.КоличествоПараметров);

КонецПроцедуры

Функция Количество() Экспорт
	Возврат ТаблицаОбработчиковСобытий.Количество()
КонецФункции

Функция ПолучитьОбработчики() Экспорт
	Возврат РаботаСТипами.Скопировать(ТаблицаОбработчиковСобытий, , Ложь);
КонецФункции

Функция ПолучитьОбработчикиПоСобытию(Знач ИмяСобытия) Экспорт

	Возврат	ФильтроватьТаблицуПоСобытию(ИмяСобытия);

КонецФункции

Процедура ДобавитьОбработчикСобытияВТаблицу(ОписаниеОбработчикаСобытия)
	
	ЗаполнитьЗначенияСвойств(ТаблицаОбработчиковСобытий.Добавить(), ОписаниеОбработчикаСобытия);

КонецПроцедуры

Функция Скопировать() Экспорт
	
	НовыйОбработчикиСобытий = Новый ОбработчикиСобытий;


	Возврат НовыйОбработчикиСобытий;

КонецФункции

Функция ФильтроватьТаблицуПоСобытию(Знач ИмяСобытия)
	
	Фильтр = Новый Структура("ИмяСобытия", ИмяСобытия);

	НайденныйМассивСтрок = ТаблицаОбработчиковСобытий.НайтиСтроки(Фильтр);

	Возврат ТаблицаОбработчиковСобытий.Скопировать(НайденныйМассивСтрок);

КонецФункции

Функция ОписаниеОбработчика(ИмяСобытия, Обработчик, ИмяМетода)
	
	ОписаниеОбработчика = Новый Структура();
	ОписаниеОбработчика.Вставить("ИмяСобытия", ИмяСобытия);
	ОписаниеОбработчика.Вставить("Обработчик", Обработчик);
	ОписаниеОбработчика.Вставить("ИмяМетода", ИмяМетода);
	ОписаниеОбработчика.Вставить("Параметры", Новый Массив());
	
	Возврат ОписаниеОбработчика;
	
КонецФункции

Функция НовыеПараметры(Параметр1 = Неопределено, Параметр2 = Неопределено,
	Параметр3 = Неопределено, Параметр4 = Неопределено,
	Параметр5 = Неопределено, Параметр6 = Неопределено) Экспорт
	
	МассивПараметров = Новый Массив();
	
	Если Не Параметр1 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр1);
	КонецЕсли;
	
	Если Не Параметр2 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр2);
	КонецЕсли;
	
	Если Не Параметр3 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр3);
	КонецЕсли;
	
	Если Не Параметр4 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр4);
	КонецЕсли;
	
	Если Не Параметр5 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр5);
	КонецЕсли;
	
	Если Не Параметр6 = Неопределено Тогда
		МассивПараметров.Добавить(Параметр6);
	КонецЕсли;
	
	Возврат МассивПараметров;
	
КонецФункции

Функция ПолучитьОписаниеСобытия(Знач ИмяСобытия, Знач ПолучитьТаблицуОбработчиков = Ложь) Экспорт
	
	ЕстьСобытие = ИндексСобытий.Свойство(ИмяСобытия);
	
	Если Не ЕстьСобытие Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаОбработчиковСобытия = Неопределено;
	Если ПолучитьТаблицуОбработчиков Тогда
		ТаблицаОбработчиковСобытия = ФильтроватьТаблицуПоСобытию(ИмяСобытия);
	КонецЕсли;

	Возврат ОписаниеСобытия(ИмяСобытия, ИндексСобытий[ИмяСобытия], ТаблицаОбработчиковСобытия);

КонецФункции

Функция ОписаниеСобытия(Знач ИмяСобытия, Знач КоличествоПараметров, Знач ТаблицаОбработчиков)
	
	Описание = Новый Структура("ИмяСобытия, КоличествоПараметров, ТаблицаОбработчиков");
	Описание.ИмяСобытия = ИмяСобытия;
	Описание.КоличествоПараметров = КоличествоПараметров;
	Описание.ТаблицаОбработчиков = ТаблицаОбработчиков;

	Возврат Описание;

КонецФункции

Процедура Выполнить_(Знач ИмяСобытия, Знач ПараметрыСобытия = Неопределено) Экспорт
	
	ЕстьСобытие = ИндексСобытий.Свойство(ИмяСобытия);
	
	Если Не ЕстьСобытие Тогда
		Возврат;
	КонецЕсли;

	ТаблицаОбработчиковСобытия = ФильтроватьТаблицуПоСобытию(ИмяСобытия);

	Для каждого СтрокаТаблицы Из ТаблицаОбработчиковСобытия Цикл
		
		Делегат = Делегаты.Создать(СтрокаТаблицы.Обработчик, СтрокаТаблицы.ИмяМетода);
	
		Если ПараметрыСобытия = Неопределено Тогда
			ПараметрыСобытия = СтрокаТаблицы.Параметры;
		КонецЕсли;
		
		Если ПараметрыСобытия.Количество() > 0  Тогда
			Делегат.Исполнить(ПараметрыСобытия);
		Иначе
			Делегат.Исполнить();
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ПриСозданииОбъекта()
	
	ИндексСобытий = Новый Структура();

	ТаблицаОбработчиковСобытий = Новый ТаблицаЗначений();
	ТаблицаОбработчиковСобытий.Колонки.Добавить("ИмяСобытия");
	ТаблицаОбработчиковСобытий.Колонки.Добавить("Обработчик");
	ТаблицаОбработчиковСобытий.Колонки.Добавить("ИмяМетода");
	ТаблицаОбработчиковСобытий.Колонки.Добавить("Параметры");

КонецПроцедуры
