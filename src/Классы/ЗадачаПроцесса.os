
Перем ЗадачаПередВыполнением;
Перем ЗадачаПослеВыполнения;
Перем ЗадачаПриОшибке;
Перем ЗадачаВыполнения;

Функция Задача(ЗадачаОбъект) Экспорт

	ЗадачаВыполнения = ЗадачаОбъект;
	Возврат ЭтотОбъект;
		
КонецФункции

Функция ПередВыполнением(ЗадачаОбъект) Экспорт

	ЗадачаПередВыполнением = ЗадачаОбъект;
	Возврат ЭтотОбъект;
		
КонецФункции

Функция ПослеВыполнения(ЗадачаОбъект) Экспорт

	ЗадачаПослеВыполнения = ЗадачаОбъект;
	Возврат ЭтотОбъект;
		
КонецФункции

Функция ПриОшибке(ЗадачаОбъект) Экспорт

	ЗадачаПриОшибке = ЗадачаОбъект;
	Возврат ЭтотОбъект;
		
КонецФункции

Процедура ВыполнитьЗадачу() Экспорт
	
	ВыполнитьЗадачу_Внутри(ЗадачаПередВыполнением);

	ЗадачаВыполнения.ВыполнениеЗадачи();

	Если Не ЗадачаВыполнения.Выполнена Тогда
		// TODO: Пробросить в обработку ошибки описание текущей ошибки
		ВыполнитьЗадачу_Внутри(ЗадачаПриОшибке);

	КонецЕсли;

	ВыполнитьЗадачу_Внутри(ЗадачаПослеВыполнения);

КонецПроцедуры

Функция ВыполнитьЗадачу_Внутри(ЗадачаДляВыполнения)
	
	Если ЗадачаДляВыполнения = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;

	Если ЗадачаДляВыполнения.ПустаяЗадача() Тогда
		Возврат Истина;
	КонецЕсли;

	ЗадачаДляВыполнения.ВыполнитьЗадачу();

	Возврат ЗадачаДляВыполнения.Выполнена;

КонецПроцедуры

Функция НоваяЗадача(НаименованиеЗадачи,
					ВходящийОбъектОбработчик,
					ВходящееИмяМетода,
					ВходящиеПараметрыМетода = Неопределено,
					ЗначениеПриУспешномВыполнения = Неопределено,
					ЗначениеПриОшибке = Неопределено)

	НоваяЗадача = Новый ЗадачаПроцесса(НаименованиеЗадачи, ВходящийОбъектОбработчик, ВходящееИмяМетода, ВходящиеПараметрыМетода);

	Если Не ЗначениеПриОшибке = Неопределено Тогда

		НоваяЗадача.ЗадачаПриОшибке(ЗначениеПриОшибке);

	КонецЕсли;

	Если Не ЗначениеПриУспешномВыполнения = Неопределено Тогда

		НоваяЗадача.ЗадачаУспешногоВыполнения(ЗначениеПриУспешномВыполнения);

	КонецЕсли;

	Возврат НоваяЗадача;

КонецФункции

Функция НоваяПустаяЗадача()

	Возврат НоваяЗадача(Неопределено, "ПустаяЗадача");

КонецФункции


